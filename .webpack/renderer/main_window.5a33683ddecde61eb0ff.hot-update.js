"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateclipforge"]("main_window",{

/***/ "./src/components/VideoPreview.jsx":
/*!*****************************************!*\
  !*** ./src/components/VideoPreview.jsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ VideoPreview)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/triangle-alert.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/pause.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/play.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/video.js\");\n/* harmony import */ var _utils_formatters__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/formatters */ \"./src/utils/formatters.js\");\n/* harmony import */ var _VideoPreview_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./VideoPreview.css */ \"./src/components/VideoPreview.css\");\n\n\n\n\n\n/**\n * VideoPreview Component\n * Displays video player with controls for the selected clip\n */\nfunction VideoPreview({\n  clip,\n  onPlaybackChange,\n  seekToTime\n}) {\n  const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [currentTime, setCurrentTime] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [duration, setDuration] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [hasError, setHasError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n\n  // Reset state when clip changes\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!clip) {\n      setIsPlaying(false);\n      setCurrentTime(0);\n      setDuration(0);\n      setHasError(false);\n      return;\n    }\n\n    // Reset playback state for new clip\n    setIsPlaying(false);\n    setCurrentTime(clip.trimStart || 0);\n    setDuration(clip.duration || 0);\n    setHasError(false);\n    setIsLoading(true);\n\n    // Load new video source\n    if (videoRef.current) {\n      const video = videoRef.current;\n\n      // Prefer custom protocol to avoid file:// restrictions\n      const rawPath = clip.filePath.replace(/^file:\\/\\//, '');\n      const videoSrc = `local-media://${rawPath}`;\n      video.src = videoSrc;\n      video.load();\n      video.onloadedmetadata = () => {\n        handleLoadedMetadata();\n      };\n      video.oncanplay = () => {\n        // Only seek to trim start if video is ready and we have a trim start > 0\n        if (clip.trimStart > 0 && videoRef.current) {\n          const currentTime = videoRef.current.currentTime;\n          // Only seek if we're not already at the trim start\n          if (Math.abs(currentTime - clip.trimStart) > 0.1) {\n            videoRef.current.currentTime = clip.trimStart;\n            setCurrentTime(clip.trimStart);\n          }\n        }\n      };\n      video.onerror = e => {\n        const mediaError = video.error || {};\n        console.error('[Video] error event', {\n          src: videoSrc,\n          code: mediaError.code,\n          message: mediaError.message,\n          networkState: video.networkState,\n          readyState: video.readyState\n        });\n        console.error('Video element error:', e);\n      };\n      video.onstalled = () => console.warn('[Video] stalled', {\n        src: videoSrc\n      });\n      video.onsuspend = () => console.warn('[Video] suspend', {\n        src: videoSrc\n      });\n      video.onwaiting = () => console.warn('[Video] waiting', {\n        src: videoSrc\n      });\n    }\n  }, [clip]);\n\n  // Handle video events\n  const handleLoadedMetadata = () => {\n    if (videoRef.current) {\n      setDuration(videoRef.current.duration || 0);\n      setIsLoading(false);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (videoRef.current && clip) {\n      const video = videoRef.current;\n      let newTime = video.currentTime;\n\n      // Clamp time within trim range\n      const trimStart = clip.trimStart || 0;\n      const trimEnd = clip.trimEnd || clip.duration || 0;\n\n      // Only clamp if we're actually outside the trim range\n      if (trimStart > 0 && newTime < trimStart) {\n        newTime = trimStart;\n        video.currentTime = trimStart;\n      } else if (trimEnd < clip.duration && newTime > trimEnd) {\n        newTime = trimEnd;\n        video.currentTime = trimEnd;\n        video.pause(); // Pause when reaching trim end\n        setIsPlaying(false);\n      }\n      setCurrentTime(newTime);\n      onPlaybackChange?.(newTime);\n    }\n  };\n  const handlePlay = () => {\n    setIsPlaying(true);\n  };\n  const handlePause = () => {\n    setIsPlaying(false);\n  };\n  const handleEnded = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    if (videoRef.current) {\n      videoRef.current.currentTime = 0;\n    }\n  };\n  const handleError = () => {\n    setHasError(true);\n    setIsLoading(false);\n    setIsPlaying(false);\n  };\n\n  // Playback controls\n  const togglePlayPause = () => {\n    if (!videoRef.current || hasError) {\n      return;\n    }\n    const video = videoRef.current;\n    const trimStart = clip?.trimStart || 0;\n    if (isPlaying) {\n      video.pause();\n    } else {\n      // Ensure we're at trim start if needed\n      if (trimStart > 0 && video.currentTime < trimStart) {\n        video.currentTime = trimStart;\n      }\n      video.play();\n    }\n  };\n  const handleScrub = e => {\n    if (!videoRef.current || hasError || !clip) return;\n    const newTime = parseFloat(e.target.value);\n    const trimStart = clip.trimStart || 0;\n    const trimEnd = clip.trimEnd || clip.duration || 0;\n\n    // Clamp scrubber value within trim range\n    const clampedTime = Math.max(trimStart, Math.min(trimEnd, newTime));\n    videoRef.current.currentTime = clampedTime;\n    setCurrentTime(clampedTime);\n  };\n\n  // Keyboard shortcut handler\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Space' && clip && !hasError) {\n        e.preventDefault();\n        togglePlayPause();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [clip, hasError, isPlaying]);\n\n  // No clip selected state\n  if (!clip) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"video-preview\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"preview-placeholder\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"empty-icon\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n      size: 80,\n      strokeWidth: 1.5\n    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h2\", null, \"No clip selected\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n      className: \"text-muted\"\n    }, \"Select a clip from the timeline to preview\")));\n  }\n\n  // Error state\n  if (hasError) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"video-preview\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"preview-placeholder\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"empty-icon error\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n      size: 80,\n      strokeWidth: 1.5\n    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h2\", null, \"Video Error\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n      className: \"text-muted\"\n    }, \"Unable to load video file\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n      className: \"text-muted\"\n    }, clip.fileName)));\n  }\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"video-preview\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"video-container\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"video\", {\n    ref: videoRef,\n    className: \"video-element\",\n    onLoadedMetadata: handleLoadedMetadata,\n    onTimeUpdate: handleTimeUpdate,\n    onPlay: handlePlay,\n    onPause: handlePause,\n    onEnded: handleEnded,\n    onError: handleError,\n    preload: \"metadata\"\n  }), isLoading && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"video-loading\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"loading-spinner\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, \"Loading video...\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"video-controls\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    className: \"control-btn play-btn\",\n    onClick: togglePlayPause,\n    disabled: isLoading,\n    title: isPlaying ? 'Pause (Space)' : 'Play (Space)'\n  }, isPlaying ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n    size: 18\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    size: 18\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"time-display\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, (0,_utils_formatters__WEBPACK_IMPORTED_MODULE_5__.formatDuration)(currentTime)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"time-separator\"\n  }, \"/\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, (0,_utils_formatters__WEBPACK_IMPORTED_MODULE_5__.formatDuration)(duration))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"scrubber-container\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"input\", {\n    type: \"range\",\n    className: \"scrubber\",\n    min: clip?.trimStart || 0,\n    max: clip?.trimEnd || duration || 0,\n    value: currentTime,\n    onChange: handleScrub,\n    step: \"0.1\",\n    disabled: isLoading || duration === 0\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"video-metadata\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"metadata-item\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"metadata-label\"\n  }, \"File:\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"metadata-value\",\n    title: clip.fileName\n  }, clip.fileName)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"metadata-item\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"metadata-label\"\n  }, \"Res:\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"metadata-value\"\n  }, (0,_utils_formatters__WEBPACK_IMPORTED_MODULE_5__.formatResolution)(clip.width, clip.height))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"metadata-item\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"metadata-label\"\n  }, \"Dur:\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"metadata-value\"\n  }, (0,_utils_formatters__WEBPACK_IMPORTED_MODULE_5__.formatDuration)((clip.trimEnd || clip.duration) - (clip.trimStart || 0))))));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/VideoPreview.jsx\n\n}");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("f0090b94f76d882b6c37")
/******/ })();
/******/ 
/******/ }
);