"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateclipforge"]("main_window",{

/***/ "./src/hooks/useThumbnailPreload.js":
/*!******************************************!*\
  !*** ./src/hooks/useThumbnailPreload.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useThumbnailPreload: () => (/* binding */ useThumbnailPreload)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\n// Shared thumbnail cache across all hook instances\nconst thumbnailCache = new Map();\n\n/**\n * Custom hook for lazy loading and caching thumbnails\n * Uses IntersectionObserver to load thumbnails only when visible\n */\nfunction useThumbnailPreload(clipId, thumbnailSrc) {\n  const [isVisible, setIsVisible] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [isLoaded, setIsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => Boolean(clipId && thumbnailCache.has(clipId)));\n  const [hasError, setHasError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const elementRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const observerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const imageRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!clipId) {\n      return undefined;\n    }\n\n    // If we already have the thumbnail cached, mark as loaded immediately\n    if (thumbnailCache.has(clipId)) {\n      setIsLoaded(true);\n      setHasError(false);\n      return undefined;\n    }\n    setIsLoaded(false);\n    setHasError(false);\n    setIsVisible(false);\n\n    // Fallback for environments without IntersectionObserver (e.g. older browsers/tests)\n    if (typeof window !== 'undefined' && typeof window.IntersectionObserver === 'undefined') {\n      if (thumbnailSrc) {\n        thumbnailCache.set(clipId, thumbnailSrc);\n        setIsLoaded(true);\n      }\n      return undefined;\n    }\n    if (!observerRef.current && typeof window !== 'undefined') {\n      observerRef.current = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            setIsVisible(true);\n            observerRef.current?.unobserve(entry.target);\n          }\n        });\n      }, {\n        threshold: 0.1,\n        rootMargin: '50px'\n      });\n    }\n    const element = elementRef.current;\n    if (element && observerRef.current) {\n      observerRef.current.observe(element);\n    }\n    return () => {\n      if (element && observerRef.current) {\n        observerRef.current.unobserve(element);\n      }\n    };\n  }, [clipId, thumbnailSrc]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!clipId || !thumbnailSrc || isLoaded || hasError || !isVisible) {\n      return undefined;\n    }\n    const img = new Image();\n    imageRef.current = img;\n    img.onload = () => {\n      thumbnailCache.set(clipId, thumbnailSrc);\n      setIsLoaded(true);\n      setHasError(false);\n    };\n    img.onerror = () => {\n      setHasError(true);\n    };\n    img.src = thumbnailSrc;\n    return () => {\n      if (imageRef.current) {\n        imageRef.current.onload = null;\n        imageRef.current.onerror = null;\n      }\n    };\n  }, [clipId, thumbnailSrc, isLoaded, hasError, isVisible]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => () => {\n    if (observerRef.current) {\n      observerRef.current.disconnect();\n    }\n  }, []);\n  return {\n    elementRef,\n    isVisible,\n    isLoaded,\n    hasError,\n    cachedSrc: thumbnailCache.get(clipId) || (isLoaded ? thumbnailSrc : undefined)\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/hooks/useThumbnailPreload.js\n\n}");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("f48d4137273003af092f")
/******/ })();
/******/ 
/******/ }
);