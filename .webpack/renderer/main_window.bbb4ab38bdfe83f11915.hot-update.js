"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateclipforge"]("main_window",{

/***/ "./src/utils/formatters.js":
/*!*********************************!*\
  !*** ./src/utils/formatters.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ellipsize: () => (/* binding */ ellipsize),\n/* harmony export */   formatDuration: () => (/* binding */ formatDuration),\n/* harmony export */   formatFileSize: () => (/* binding */ formatFileSize),\n/* harmony export */   formatResolution: () => (/* binding */ formatResolution),\n/* harmony export */   formatTrimmedDuration: () => (/* binding */ formatTrimmedDuration)\n/* harmony export */ });\n/**\n * Format duration in seconds to human-readable time string\n * @param {number} seconds - Duration in seconds\n * @returns {string} Formatted time (MM:SS or H:MM:SS)\n */\nfunction formatDuration(seconds) {\n  if (!seconds || seconds < 0) return '0:00';\n  const hrs = Math.floor(seconds / 3600);\n  const mins = Math.floor(seconds % 3600 / 60);\n  const secs = Math.floor(seconds % 60);\n  if (hrs > 0) {\n    return `${hrs}:${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  }\n  return `${mins}:${secs.toString().padStart(2, '0')}`;\n}\n\n/**\n * Format resolution to readable string\n * @param {number} width - Video width in pixels\n * @param {number} height - Video height in pixels\n * @returns {string} Formatted resolution (e.g., \"1920 × 1080\")\n */\nfunction formatResolution(width, height) {\n  if (!width || !height) return 'Unknown';\n  return `${width} × ${height}`;\n}\n\n/**\n * Format file size in bytes to human-readable string\n * @param {number} bytes - File size in bytes\n * @returns {string} Formatted size (e.g., \"1.5 MB\")\n */\nfunction formatFileSize(bytes) {\n  if (!bytes || bytes === 0) return '0 B';\n  const units = ['B', 'KB', 'MB', 'GB'];\n  const k = 1024;\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return `${(bytes / Math.pow(k, i)).toFixed(1)} ${units[i]}`;\n}\n\n/**\n * Ellipsize text to fit within specified length\n * @param {string} text - Text to ellipsize\n * @param {number} maxLength - Maximum length before ellipsis\n * @returns {string} Ellipsized text\n */\nfunction ellipsize(text, maxLength = 20) {\n  if (!text || typeof text !== 'string') return '';\n  if (text.length <= maxLength) return text;\n  return `${text.substring(0, maxLength)}...`;\n}\n\n/**\n * Format trimmed duration for display\n * @param {number} trimStart - Start trim point in seconds\n * @param {number} trimEnd - End trim point in seconds\n * @returns {string} Formatted trimmed duration\n */\nfunction formatTrimmedDuration(trimStart, trimEnd) {\n  if (typeof trimStart !== 'number' || typeof trimEnd !== 'number') {\n    return '0:00';\n  }\n  const duration = Math.max(0, trimEnd - trimStart);\n  return formatDuration(duration);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QixHQUFHLENBQUMsQ0FBQyxFQUFFRixPQUFPLEdBQUdELFNBQVMsQ0FBQztFQUNqRCxPQUFPMUIsY0FBYyxDQUFDNEIsUUFBUSxDQUFDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpcGZvcmdlLy4vc3JjL3V0aWxzL2Zvcm1hdHRlcnMuanM/NTI5YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZvcm1hdCBkdXJhdGlvbiBpbiBzZWNvbmRzIHRvIGh1bWFuLXJlYWRhYmxlIHRpbWUgc3RyaW5nXG4gKiBAcGFyYW0ge251bWJlcn0gc2Vjb25kcyAtIER1cmF0aW9uIGluIHNlY29uZHNcbiAqIEByZXR1cm5zIHtzdHJpbmd9IEZvcm1hdHRlZCB0aW1lIChNTTpTUyBvciBIOk1NOlNTKVxuICovXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0RHVyYXRpb24oc2Vjb25kcykge1xuICBpZiAoIXNlY29uZHMgfHwgc2Vjb25kcyA8IDApIHJldHVybiAnMDowMCc7XG4gIFxuICBjb25zdCBocnMgPSBNYXRoLmZsb29yKHNlY29uZHMgLyAzNjAwKTtcbiAgY29uc3QgbWlucyA9IE1hdGguZmxvb3IoKHNlY29uZHMgJSAzNjAwKSAvIDYwKTtcbiAgY29uc3Qgc2VjcyA9IE1hdGguZmxvb3Ioc2Vjb25kcyAlIDYwKTtcbiAgXG4gIGlmIChocnMgPiAwKSB7XG4gICAgcmV0dXJuIGAke2hyc306JHttaW5zLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX06JHtzZWNzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX1gO1xuICB9XG4gIHJldHVybiBgJHttaW5zfToke3NlY3MudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfWA7XG59XG5cbi8qKlxuICogRm9ybWF0IHJlc29sdXRpb24gdG8gcmVhZGFibGUgc3RyaW5nXG4gKiBAcGFyYW0ge251bWJlcn0gd2lkdGggLSBWaWRlbyB3aWR0aCBpbiBwaXhlbHNcbiAqIEBwYXJhbSB7bnVtYmVyfSBoZWlnaHQgLSBWaWRlbyBoZWlnaHQgaW4gcGl4ZWxzXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBGb3JtYXR0ZWQgcmVzb2x1dGlvbiAoZS5nLiwgXCIxOTIwIMOXIDEwODBcIilcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdFJlc29sdXRpb24od2lkdGgsIGhlaWdodCkge1xuICBpZiAoIXdpZHRoIHx8ICFoZWlnaHQpIHJldHVybiAnVW5rbm93bic7XG4gIHJldHVybiBgJHt3aWR0aH0gw5cgJHtoZWlnaHR9YDtcbn1cblxuLyoqXG4gKiBGb3JtYXQgZmlsZSBzaXplIGluIGJ5dGVzIHRvIGh1bWFuLXJlYWRhYmxlIHN0cmluZ1xuICogQHBhcmFtIHtudW1iZXJ9IGJ5dGVzIC0gRmlsZSBzaXplIGluIGJ5dGVzXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBGb3JtYXR0ZWQgc2l6ZSAoZS5nLiwgXCIxLjUgTUJcIilcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdEZpbGVTaXplKGJ5dGVzKSB7XG4gIGlmICghYnl0ZXMgfHwgYnl0ZXMgPT09IDApIHJldHVybiAnMCBCJztcbiAgXG4gIGNvbnN0IHVuaXRzID0gWydCJywgJ0tCJywgJ01CJywgJ0dCJ107XG4gIGNvbnN0IGsgPSAxMDI0O1xuICBjb25zdCBpID0gTWF0aC5mbG9vcihNYXRoLmxvZyhieXRlcykgLyBNYXRoLmxvZyhrKSk7XG4gIFxuICByZXR1cm4gYCR7KGJ5dGVzIC8gTWF0aC5wb3coaywgaSkpLnRvRml4ZWQoMSl9ICR7dW5pdHNbaV19YDtcbn1cblxuLyoqXG4gKiBFbGxpcHNpemUgdGV4dCB0byBmaXQgd2l0aGluIHNwZWNpZmllZCBsZW5ndGhcbiAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0IC0gVGV4dCB0byBlbGxpcHNpemVcbiAqIEBwYXJhbSB7bnVtYmVyfSBtYXhMZW5ndGggLSBNYXhpbXVtIGxlbmd0aCBiZWZvcmUgZWxsaXBzaXNcbiAqIEByZXR1cm5zIHtzdHJpbmd9IEVsbGlwc2l6ZWQgdGV4dFxuICovXG5leHBvcnQgZnVuY3Rpb24gZWxsaXBzaXplKHRleHQsIG1heExlbmd0aCA9IDIwKSB7XG4gIGlmICghdGV4dCB8fCB0eXBlb2YgdGV4dCAhPT0gJ3N0cmluZycpIHJldHVybiAnJztcbiAgaWYgKHRleHQubGVuZ3RoIDw9IG1heExlbmd0aCkgcmV0dXJuIHRleHQ7XG4gIHJldHVybiBgJHt0ZXh0LnN1YnN0cmluZygwLCBtYXhMZW5ndGgpfS4uLmA7XG59XG5cbi8qKlxuICogRm9ybWF0IHRyaW1tZWQgZHVyYXRpb24gZm9yIGRpc3BsYXlcbiAqIEBwYXJhbSB7bnVtYmVyfSB0cmltU3RhcnQgLSBTdGFydCB0cmltIHBvaW50IGluIHNlY29uZHNcbiAqIEBwYXJhbSB7bnVtYmVyfSB0cmltRW5kIC0gRW5kIHRyaW0gcG9pbnQgaW4gc2Vjb25kc1xuICogQHJldHVybnMge3N0cmluZ30gRm9ybWF0dGVkIHRyaW1tZWQgZHVyYXRpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdFRyaW1tZWREdXJhdGlvbih0cmltU3RhcnQsIHRyaW1FbmQpIHtcbiAgaWYgKHR5cGVvZiB0cmltU3RhcnQgIT09ICdudW1iZXInIHx8IHR5cGVvZiB0cmltRW5kICE9PSAnbnVtYmVyJykge1xuICAgIHJldHVybiAnMDowMCc7XG4gIH1cbiAgY29uc3QgZHVyYXRpb24gPSBNYXRoLm1heCgwLCB0cmltRW5kIC0gdHJpbVN0YXJ0KTtcbiAgcmV0dXJuIGZvcm1hdER1cmF0aW9uKGR1cmF0aW9uKTtcbn1cblxuIl0sIm5hbWVzIjpbImZvcm1hdER1cmF0aW9uIiwic2Vjb25kcyIsImhycyIsIk1hdGgiLCJmbG9vciIsIm1pbnMiLCJzZWNzIiwidG9TdHJpbmciLCJwYWRTdGFydCIsImZvcm1hdFJlc29sdXRpb24iLCJ3aWR0aCIsImhlaWdodCIsImZvcm1hdEZpbGVTaXplIiwiYnl0ZXMiLCJ1bml0cyIsImsiLCJpIiwibG9nIiwicG93IiwidG9GaXhlZCIsImVsbGlwc2l6ZSIsInRleHQiLCJtYXhMZW5ndGgiLCJsZW5ndGgiLCJzdWJzdHJpbmciLCJmb3JtYXRUcmltbWVkRHVyYXRpb24iLCJ0cmltU3RhcnQiLCJ0cmltRW5kIiwiZHVyYXRpb24iLCJtYXgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/formatters.js\n\n}");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("a5424003479d2a7acb74")
/******/ })();
/******/ 
/******/ }
);