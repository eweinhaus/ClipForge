"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateclipforge"]("main_window",{

/***/ "./src/components/ClipBlock.jsx":
/*!**************************************!*\
  !*** ./src/components/ClipBlock.jsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ClipBlock)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/trash-2.js\");\n/* harmony import */ var _utils_formatters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/formatters */ \"./src/utils/formatters.js\");\n/* harmony import */ var _utils_timelineUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/timelineUtils */ \"./src/utils/timelineUtils.js\");\n/* harmony import */ var _hooks_useThumbnailPreload__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../hooks/useThumbnailPreload */ \"./src/hooks/useThumbnailPreload.js\");\n/* harmony import */ var _Tooltip__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tooltip */ \"./src/components/Tooltip.jsx\");\n/* harmony import */ var _ClipBlock_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ClipBlock.css */ \"./src/components/ClipBlock.css\");\n\n\n\n\n\n\n\n\n/**\n * ClipBlock Component\n * Individual clip block in the horizontal timeline\n */\nfunction ClipBlock({\n  clip,\n  isSelected,\n  onSelect,\n  onDelete,\n  width,\n  position,\n  zoomLevel,\n  snapToGrid,\n  onTrimChange\n}) {\n  const [isDraggingEdge, setIsDraggingEdge] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [draggingEdge, setDraggingEdge] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null); // 'left' or 'right'\n  const [draftTrimStart, setDraftTrimStart] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(clip.trimStart);\n  const [draftTrimEnd, setDraftTrimEnd] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(clip.trimEnd);\n  const [tooltip, setTooltip] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    visible: false,\n    x: 0,\n    y: 0,\n    timeSeconds: 0,\n    message: ''\n  });\n  const [isHovered, setIsHovered] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [hoverCard, setHoverCard] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    visible: false,\n    x: 0,\n    y: 0\n  });\n  const blockRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const startXRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  const originalTrimStartRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  const originalTrimEndRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n\n  // Use thumbnail preloading hook\n  const {\n    elementRef,\n    isLoaded,\n    hasError,\n    cachedSrc\n  } = (0,_hooks_useThumbnailPreload__WEBPACK_IMPORTED_MODULE_4__.useThumbnailPreload)(clip.id, clip.thumbnail);\n\n  // Update draft values when clip changes\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    setDraftTrimStart(clip.trimStart);\n    setDraftTrimEnd(clip.trimEnd);\n  }, [clip.trimStart, clip.trimEnd]);\n\n  // Handle edge drag start\n  const handleEdgeMouseDown = (e, edge) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDraggingEdge(true);\n    setDraggingEdge(edge);\n    startXRef.current = e.clientX;\n    originalTrimStartRef.current = clip.trimStart;\n    originalTrimEndRef.current = clip.trimEnd;\n\n    // Show tooltip\n    const rect = blockRef.current?.getBoundingClientRect();\n    if (rect) {\n      setTooltip({\n        visible: true,\n        x: e.clientX,\n        y: rect.top,\n        timeSeconds: edge === 'left' ? clip.trimStart : clip.trimEnd,\n        message: `Dragging ${edge} edge`\n      });\n    }\n  };\n\n  // Handle mouse move during edge drag\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const handleMouseMove = e => {\n      if (!isDraggingEdge || !draggingEdge) return;\n      const deltaX = e.clientX - startXRef.current;\n      const deltaTime = (0,_utils_timelineUtils__WEBPACK_IMPORTED_MODULE_3__.pxToTime)(deltaX, zoomLevel);\n      let newTrimStart = originalTrimStartRef.current;\n      let newTrimEnd = originalTrimEndRef.current;\n      if (draggingEdge === 'left') {\n        newTrimStart = Math.max(0, originalTrimStartRef.current + deltaTime);\n        newTrimStart = (0,_utils_timelineUtils__WEBPACK_IMPORTED_MODULE_3__.snap)(newTrimStart, snapToGrid);\n      } else if (draggingEdge === 'right') {\n        newTrimEnd = Math.min(clip.duration, originalTrimEndRef.current + deltaTime);\n        newTrimEnd = (0,_utils_timelineUtils__WEBPACK_IMPORTED_MODULE_3__.snap)(newTrimEnd, snapToGrid);\n      }\n\n      // Validate trim range\n      const validation = (0,_utils_timelineUtils__WEBPACK_IMPORTED_MODULE_3__.validateTrimRange)(newTrimStart, newTrimEnd, clip.duration);\n      if (validation.isValid) {\n        setDraftTrimStart(newTrimStart);\n        setDraftTrimEnd(newTrimEnd);\n\n        // Update tooltip\n        setTooltip(prev => ({\n          ...prev,\n          x: e.clientX,\n          timeSeconds: draggingEdge === 'left' ? newTrimStart : newTrimEnd,\n          message: validation.message\n        }));\n      } else {\n        // Show invalid state\n        setTooltip(prev => ({\n          ...prev,\n          x: e.clientX,\n          message: validation.message\n        }));\n      }\n    };\n    const handleMouseUp = () => {\n      if (!isDraggingEdge) return;\n\n      // Validate final trim range\n      const validation = (0,_utils_timelineUtils__WEBPACK_IMPORTED_MODULE_3__.validateTrimRange)(draftTrimStart, draftTrimEnd, clip.duration);\n      if (validation.isValid && onTrimChange) {\n        onTrimChange(clip.id, draftTrimStart, draftTrimEnd);\n      }\n\n      // Reset state\n      setIsDraggingEdge(false);\n      setDraggingEdge(null);\n      setTooltip({\n        visible: false,\n        x: 0,\n        y: 0,\n        timeSeconds: 0,\n        message: ''\n      });\n    };\n    if (isDraggingEdge) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDraggingEdge, draggingEdge, draftTrimStart, draftTrimEnd, clip.id, clip.duration, zoomLevel, snapToGrid, onTrimChange]);\n  const handleClick = e => {\n    e.stopPropagation();\n    onSelect();\n  };\n  const handleDelete = e => {\n    e.stopPropagation();\n    onDelete();\n  };\n  const handleMouseEnter = e => {\n    setIsHovered(true);\n\n    // Show hover card with full filename and original duration\n    if (!isDraggingEdge && blockRef.current) {\n      const rect = blockRef.current.getBoundingClientRect();\n      setHoverCard({\n        visible: true,\n        x: rect.left + rect.width / 2,\n        y: rect.top - 10\n      });\n    }\n  };\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n    setHoverCard({\n      visible: false,\n      x: 0,\n      y: 0\n    });\n    if (!isDraggingEdge) {\n      setTooltip({\n        visible: false,\n        x: 0,\n        y: 0,\n        timeSeconds: 0,\n        message: ''\n      });\n    }\n  };\n\n  // Calculate current width based on draft trim values\n  const currentWidth = (0,_utils_timelineUtils__WEBPACK_IMPORTED_MODULE_3__.timeToPx)(draftTrimEnd - draftTrimStart, zoomLevel);\n  const currentPosition = position; // TrackArea handles trimStart positioning\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    ref: blockRef,\n    className: `clip-block ${isSelected ? 'selected' : ''} ${isDraggingEdge ? 'dragging' : ''} ${isHovered ? 'hovered' : ''}`,\n    style: {\n      width: `${currentWidth}px`,\n      left: `${currentPosition}px`,\n      minWidth: '20px' // Ensure minimum visibility\n    },\n    onClick: handleClick,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    role: \"listitem\",\n    tabIndex: 0,\n    onKeyDown: e => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        onSelect();\n      }\n    },\n    \"aria-label\": `Clip: ${clip.fileName}, Duration: ${(0,_utils_formatters__WEBPACK_IMPORTED_MODULE_2__.formatDuration)(clip.duration)}`\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: `trim-handle left ${isHovered || isDraggingEdge ? 'visible' : ''}`,\n    onMouseDown: e => handleEdgeMouseDown(e, 'left'),\n    title: \"Drag to trim start\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: `trim-handle right ${isHovered || isDraggingEdge ? 'visible' : ''}`,\n    onMouseDown: e => handleEdgeMouseDown(e, 'right'),\n    title: \"Drag to trim end\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"clip-thumbnail\",\n    ref: elementRef\n  }, isLoaded && cachedSrc ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"img\", {\n    src: cachedSrc,\n    alt: clip.fileName,\n    className: \"thumbnail-image\"\n  }) : hasError ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"thumbnail-placeholder error\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, \"\\uD83D\\uDCF9\")) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"thumbnail-placeholder loading\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, \"\\u23F3\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"clip-filename-overlay\"\n  }, (0,_utils_formatters__WEBPACK_IMPORTED_MODULE_2__.ellipsize)(clip.fileName, 15)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"clip-duration-overlay\"\n  }, (0,_utils_formatters__WEBPACK_IMPORTED_MODULE_2__.formatTrimmedDuration)(draftTrimStart, draftTrimEnd)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    className: \"clip-delete\",\n    onClick: handleDelete,\n    title: \"Delete clip\",\n    \"aria-label\": `Delete ${clip.fileName}`\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n    size: 12\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Tooltip__WEBPACK_IMPORTED_MODULE_5__[\"default\"], tooltip), hoverCard.visible && !isDraggingEdge && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"clip-hover-card\",\n    style: {\n      left: `${hoverCard.x}px`,\n      top: `${hoverCard.y}px`,\n      transform: 'translateX(-50%)'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"hover-card-content\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"hover-card-filename\"\n  }, clip.fileName), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"hover-card-duration\"\n  }, \"Original: \", (0,_utils_formatters__WEBPACK_IMPORTED_MODULE_2__.formatDuration)(clip.duration)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"hover-card-trimmed\"\n  }, \"Trimmed: \", (0,_utils_formatters__WEBPACK_IMPORTED_MODULE_2__.formatTrimmedDuration)(draftTrimStart, draftTrimEnd))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"hover-card-arrow\"\n  })));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ClipBlock.jsx\n\n}");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("c58d0a454ebd60264c4e")
/******/ })();
/******/ 
/******/ }
);