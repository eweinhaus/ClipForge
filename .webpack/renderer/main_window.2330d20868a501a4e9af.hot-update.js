"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateclipforge"]("main_window",{

/***/ "./src/components/VideoPreview.jsx":
/*!*****************************************!*\
  !*** ./src/components/VideoPreview.jsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ VideoPreview)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/triangle-alert.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/pause.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/play.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/video.js\");\n/* harmony import */ var _utils_formatters__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/formatters */ \"./src/utils/formatters.js\");\n/* harmony import */ var _VideoPreview_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./VideoPreview.css */ \"./src/components/VideoPreview.css\");\n\n\n\n\n\n/**\n * VideoPreview Component\n * Displays video player with controls for the selected clip\n */\nfunction VideoPreview({\n  clip,\n  onPlaybackChange\n}) {\n  const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [currentTime, setCurrentTime] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [duration, setDuration] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [hasError, setHasError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n\n  // Reset state when clip changes\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!clip) {\n      setIsPlaying(false);\n      setCurrentTime(0);\n      setDuration(0);\n      setHasError(false);\n      return;\n    }\n\n    // Reset playback state for new clip\n    setIsPlaying(false);\n    setCurrentTime(clip.trimStart || 0);\n    setDuration(clip.duration || 0);\n    setHasError(false);\n    setIsLoading(true);\n\n    // Load new video source\n    if (videoRef.current) {\n      const video = videoRef.current;\n\n      // Prefer custom protocol to avoid file:// restrictions\n      const rawPath = clip.filePath.replace(/^file:\\/\\//, '');\n      const videoSrc = `local-media://${rawPath}`;\n      video.src = videoSrc;\n      video.load();\n      video.onloadedmetadata = () => {\n        handleLoadedMetadata();\n      };\n      video.oncanplay = () => {\n        // Only seek to trim start if video is ready and we have a trim start > 0\n        if (clip.trimStart > 0 && videoRef.current) {\n          const currentTime = videoRef.current.currentTime;\n          // Only seek if we're not already at the trim start\n          if (Math.abs(currentTime - clip.trimStart) > 0.1) {\n            videoRef.current.currentTime = clip.trimStart;\n            setCurrentTime(clip.trimStart);\n          }\n        }\n      };\n      video.onerror = e => {\n        const mediaError = video.error || {};\n        console.error('[Video] error event', {\n          src: videoSrc,\n          code: mediaError.code,\n          message: mediaError.message,\n          networkState: video.networkState,\n          readyState: video.readyState\n        });\n        console.error('Video element error:', e);\n      };\n      video.onstalled = () => console.warn('[Video] stalled', {\n        src: videoSrc\n      });\n      video.onsuspend = () => console.warn('[Video] suspend', {\n        src: videoSrc\n      });\n      video.onwaiting = () => console.warn('[Video] waiting', {\n        src: videoSrc\n      });\n    }\n  }, [clip]);\n\n  // Handle video events\n  const handleLoadedMetadata = () => {\n    if (videoRef.current) {\n      setDuration(videoRef.current.duration || 0);\n      setIsLoading(false);\n    }\n  };\n  const handleTimeUpdate = () => {\n    if (videoRef.current && clip) {\n      const video = videoRef.current;\n      let newTime = video.currentTime;\n\n      // Clamp time within trim range\n      const trimStart = clip.trimStart || 0;\n      const trimEnd = clip.trimEnd || clip.duration || 0;\n\n      // Only clamp if we're actually outside the trim range\n      if (trimStart > 0 && newTime < trimStart) {\n        newTime = trimStart;\n        video.currentTime = trimStart;\n      } else if (trimEnd < clip.duration && newTime > trimEnd) {\n        newTime = trimEnd;\n        video.currentTime = trimEnd;\n        video.pause(); // Pause when reaching trim end\n        setIsPlaying(false);\n      }\n      setCurrentTime(newTime);\n      onPlaybackChange?.(newTime);\n    }\n  };\n  const handlePlay = () => {\n    setIsPlaying(true);\n  };\n  const handlePause = () => {\n    setIsPlaying(false);\n  };\n  const handleEnded = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    if (videoRef.current) {\n      videoRef.current.currentTime = 0;\n    }\n  };\n  const handleError = () => {\n    setHasError(true);\n    setIsLoading(false);\n    setIsPlaying(false);\n  };\n\n  // Playback controls\n  const togglePlayPause = () => {\n    if (!videoRef.current || hasError) {\n      return;\n    }\n    const video = videoRef.current;\n    const trimStart = clip?.trimStart || 0;\n    if (isPlaying) {\n      video.pause();\n    } else {\n      // Ensure we're at trim start if needed\n      if (trimStart > 0 && video.currentTime < trimStart) {\n        video.currentTime = trimStart;\n      }\n      video.play();\n    }\n  };\n  const handleScrub = e => {\n    if (!videoRef.current || hasError || !clip) return;\n    const newTime = parseFloat(e.target.value);\n    const trimStart = clip.trimStart || 0;\n    const trimEnd = clip.trimEnd || clip.duration || 0;\n\n    // Clamp scrubber value within trim range\n    const clampedTime = Math.max(trimStart, Math.min(trimEnd, newTime));\n    videoRef.current.currentTime = clampedTime;\n    setCurrentTime(clampedTime);\n  };\n\n  // Keyboard shortcut handler\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Space' && clip && !hasError) {\n        e.preventDefault();\n        togglePlayPause();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [clip, hasError, isPlaying]);\n\n  // No clip selected state\n  if (!clip) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"video-preview\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"preview-placeholder\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"empty-icon\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n      size: 80,\n      strokeWidth: 1.5\n    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h2\", null, \"No clip selected\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n      className: \"text-muted\"\n    }, \"Select a clip from the timeline to preview\")));\n  }\n\n  // Error state\n  if (hasError) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"video-preview\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"preview-placeholder\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"empty-icon error\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n      size: 80,\n      strokeWidth: 1.5\n    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h2\", null, \"Video Error\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n      className: \"text-muted\"\n    }, \"Unable to load video file\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n      className: \"text-muted\"\n    }, clip.fileName)));\n  }\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"video-preview\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"video-container\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"video\", {\n    ref: videoRef,\n    className: \"video-element\",\n    onLoadedMetadata: handleLoadedMetadata,\n    onTimeUpdate: handleTimeUpdate,\n    onPlay: handlePlay,\n    onPause: handlePause,\n    onEnded: handleEnded,\n    onError: handleError,\n    preload: \"metadata\"\n  }), isLoading && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"video-loading\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"loading-spinner\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, \"Loading video...\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"video-controls\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    className: \"control-btn play-btn\",\n    onClick: togglePlayPause,\n    disabled: isLoading,\n    title: isPlaying ? 'Pause (Space)' : 'Play (Space)'\n  }, isPlaying ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n    size: 18\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    size: 18\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"time-display\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, (0,_utils_formatters__WEBPACK_IMPORTED_MODULE_5__.formatDuration)(currentTime)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"time-separator\"\n  }, \"/\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, (0,_utils_formatters__WEBPACK_IMPORTED_MODULE_5__.formatDuration)(duration))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"scrubber-container\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"input\", {\n    type: \"range\",\n    className: \"scrubber\",\n    min: clip?.trimStart || 0,\n    max: clip?.trimEnd || duration || 0,\n    value: currentTime,\n    onChange: handleScrub,\n    step: \"0.1\",\n    disabled: isLoading || duration === 0\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"video-metadata\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"metadata-item\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"metadata-label\"\n  }, \"File:\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"metadata-value\",\n    title: clip.fileName\n  }, clip.fileName)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"metadata-item\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"metadata-label\"\n  }, \"Res:\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"metadata-value\"\n  }, (0,_utils_formatters__WEBPACK_IMPORTED_MODULE_5__.formatResolution)(clip.width, clip.height))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"metadata-item\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"metadata-label\"\n  }, \"Dur:\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"metadata-value\"\n  }, (0,_utils_formatters__WEBPACK_IMPORTED_MODULE_5__.formatDuration)((clip.trimEnd || clip.duration) - (clip.trimStart || 0))))));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUE7SUFBSzRFLFNBQVMsRUFBQztFQUFlLGdCQUM1QjVFLDBEQUFBO0lBQU00RSxTQUFTLEVBQUM7RUFBZ0IsR0FBQyxNQUFVLENBQUMsZUFDNUM1RSwwREFBQTtJQUFNNEUsU0FBUyxFQUFDO0VBQWdCLEdBQzdCakUsbUVBQWdCLENBQUNFLElBQUksQ0FBQ2lGLEtBQUssRUFBRWpGLElBQUksQ0FBQ2tGLE1BQU0sQ0FDckMsQ0FDSCxDQUFDLGVBQ04vRiwwREFBQTtJQUFLNEUsU0FBUyxFQUFDO0VBQWUsZ0JBQzVCNUUsMERBQUE7SUFBTTRFLFNBQVMsRUFBQztFQUFnQixHQUFDLE1BQVUsQ0FBQyxlQUM1QzVFLDBEQUFBO0lBQU00RSxTQUFTLEVBQUM7RUFBZ0IsR0FDN0JsRSxpRUFBYyxDQUFDLENBQUNHLElBQUksQ0FBQzBDLE9BQU8sSUFBSTFDLElBQUksQ0FBQ08sUUFBUSxLQUFLUCxJQUFJLENBQUNhLFNBQVMsSUFBSSxDQUFDLENBQUMsQ0FDbkUsQ0FDSCxDQUNGLENBQ0YsQ0FBQztBQUVWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpcGZvcmdlLy4vc3JjL2NvbXBvbmVudHMvVmlkZW9QcmV2aWV3LmpzeD81ODE2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VSZWYsIHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZUltcGVyYXRpdmVIYW5kbGUsIGZvcndhcmRSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBQbGF5LCBQYXVzZSwgVmlkZW8sIEFsZXJ0VHJpYW5nbGUgfSBmcm9tICdsdWNpZGUtcmVhY3QnO1xuaW1wb3J0IHsgZm9ybWF0RHVyYXRpb24sIGZvcm1hdFJlc29sdXRpb24gfSBmcm9tICcuLi91dGlscy9mb3JtYXR0ZXJzJztcbmltcG9ydCAnLi9WaWRlb1ByZXZpZXcuY3NzJztcblxuLyoqXG4gKiBWaWRlb1ByZXZpZXcgQ29tcG9uZW50XG4gKiBEaXNwbGF5cyB2aWRlbyBwbGF5ZXIgd2l0aCBjb250cm9scyBmb3IgdGhlIHNlbGVjdGVkIGNsaXBcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVmlkZW9QcmV2aWV3KHsgY2xpcCwgb25QbGF5YmFja0NoYW5nZSB9KSB7XG4gIGNvbnN0IHZpZGVvUmVmID0gdXNlUmVmKG51bGwpO1xuICBjb25zdCBbaXNQbGF5aW5nLCBzZXRJc1BsYXlpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbY3VycmVudFRpbWUsIHNldEN1cnJlbnRUaW1lXSA9IHVzZVN0YXRlKDApO1xuICBjb25zdCBbZHVyYXRpb24sIHNldER1cmF0aW9uXSA9IHVzZVN0YXRlKDApO1xuICBjb25zdCBbaXNMb2FkaW5nLCBzZXRJc0xvYWRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbaGFzRXJyb3IsIHNldEhhc0Vycm9yXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICAvLyBSZXNldCBzdGF0ZSB3aGVuIGNsaXAgY2hhbmdlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghY2xpcCkge1xuICAgICAgc2V0SXNQbGF5aW5nKGZhbHNlKTtcbiAgICAgIHNldEN1cnJlbnRUaW1lKDApO1xuICAgICAgc2V0RHVyYXRpb24oMCk7XG4gICAgICBzZXRIYXNFcnJvcihmYWxzZSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gUmVzZXQgcGxheWJhY2sgc3RhdGUgZm9yIG5ldyBjbGlwXG4gICAgc2V0SXNQbGF5aW5nKGZhbHNlKTtcbiAgICBzZXRDdXJyZW50VGltZShjbGlwLnRyaW1TdGFydCB8fCAwKTtcbiAgICBzZXREdXJhdGlvbihjbGlwLmR1cmF0aW9uIHx8IDApO1xuICAgIHNldEhhc0Vycm9yKGZhbHNlKTtcbiAgICBzZXRJc0xvYWRpbmcodHJ1ZSk7XG5cbiAgICAvLyBMb2FkIG5ldyB2aWRlbyBzb3VyY2VcbiAgICBpZiAodmlkZW9SZWYuY3VycmVudCkge1xuICAgICAgY29uc3QgdmlkZW8gPSB2aWRlb1JlZi5jdXJyZW50O1xuICAgICAgXG4gICAgICAvLyBQcmVmZXIgY3VzdG9tIHByb3RvY29sIHRvIGF2b2lkIGZpbGU6Ly8gcmVzdHJpY3Rpb25zXG4gICAgICBjb25zdCByYXdQYXRoID0gY2xpcC5maWxlUGF0aC5yZXBsYWNlKC9eZmlsZTpcXC9cXC8vLCAnJyk7XG4gICAgICBjb25zdCB2aWRlb1NyYyA9IGBsb2NhbC1tZWRpYTovLyR7cmF3UGF0aH1gO1xuICAgICAgXG4gICAgICB2aWRlby5zcmMgPSB2aWRlb1NyYztcbiAgICAgIHZpZGVvLmxvYWQoKTtcblxuICAgICAgdmlkZW8ub25sb2FkZWRtZXRhZGF0YSA9ICgpID0+IHtcbiAgICAgICAgaGFuZGxlTG9hZGVkTWV0YWRhdGEoKTtcbiAgICAgIH07XG5cbiAgICAgIHZpZGVvLm9uY2FucGxheSA9ICgpID0+IHtcbiAgICAgICAgLy8gT25seSBzZWVrIHRvIHRyaW0gc3RhcnQgaWYgdmlkZW8gaXMgcmVhZHkgYW5kIHdlIGhhdmUgYSB0cmltIHN0YXJ0ID4gMFxuICAgICAgICBpZiAoY2xpcC50cmltU3RhcnQgPiAwICYmIHZpZGVvUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICBjb25zdCBjdXJyZW50VGltZSA9IHZpZGVvUmVmLmN1cnJlbnQuY3VycmVudFRpbWU7XG4gICAgICAgICAgLy8gT25seSBzZWVrIGlmIHdlJ3JlIG5vdCBhbHJlYWR5IGF0IHRoZSB0cmltIHN0YXJ0XG4gICAgICAgICAgaWYgKE1hdGguYWJzKGN1cnJlbnRUaW1lIC0gY2xpcC50cmltU3RhcnQpID4gMC4xKSB7XG4gICAgICAgICAgICB2aWRlb1JlZi5jdXJyZW50LmN1cnJlbnRUaW1lID0gY2xpcC50cmltU3RhcnQ7XG4gICAgICAgICAgICBzZXRDdXJyZW50VGltZShjbGlwLnRyaW1TdGFydCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICB2aWRlby5vbmVycm9yID0gKGUpID0+IHtcbiAgICAgICAgY29uc3QgbWVkaWFFcnJvciA9IHZpZGVvLmVycm9yIHx8IHt9O1xuICAgICAgICBjb25zb2xlLmVycm9yKCdbVmlkZW9dIGVycm9yIGV2ZW50Jywge1xuICAgICAgICAgIHNyYzogdmlkZW9TcmMsXG4gICAgICAgICAgY29kZTogbWVkaWFFcnJvci5jb2RlLFxuICAgICAgICAgIG1lc3NhZ2U6IG1lZGlhRXJyb3IubWVzc2FnZSxcbiAgICAgICAgICBuZXR3b3JrU3RhdGU6IHZpZGVvLm5ldHdvcmtTdGF0ZSxcbiAgICAgICAgICByZWFkeVN0YXRlOiB2aWRlby5yZWFkeVN0YXRlLFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc29sZS5lcnJvcignVmlkZW8gZWxlbWVudCBlcnJvcjonLCBlKTtcbiAgICAgIH07XG5cbiAgICAgIHZpZGVvLm9uc3RhbGxlZCA9ICgpID0+IGNvbnNvbGUud2FybignW1ZpZGVvXSBzdGFsbGVkJywgeyBzcmM6IHZpZGVvU3JjIH0pO1xuICAgICAgdmlkZW8ub25zdXNwZW5kID0gKCkgPT4gY29uc29sZS53YXJuKCdbVmlkZW9dIHN1c3BlbmQnLCB7IHNyYzogdmlkZW9TcmMgfSk7XG4gICAgICB2aWRlby5vbndhaXRpbmcgPSAoKSA9PiBjb25zb2xlLndhcm4oJ1tWaWRlb10gd2FpdGluZycsIHsgc3JjOiB2aWRlb1NyYyB9KTtcbiAgICB9XG4gIH0sIFtjbGlwXSk7XG5cbiAgLy8gSGFuZGxlIHZpZGVvIGV2ZW50c1xuICBjb25zdCBoYW5kbGVMb2FkZWRNZXRhZGF0YSA9ICgpID0+IHtcbiAgICBpZiAodmlkZW9SZWYuY3VycmVudCkge1xuICAgICAgc2V0RHVyYXRpb24odmlkZW9SZWYuY3VycmVudC5kdXJhdGlvbiB8fCAwKTtcbiAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZVRpbWVVcGRhdGUgPSAoKSA9PiB7XG4gICAgaWYgKHZpZGVvUmVmLmN1cnJlbnQgJiYgY2xpcCkge1xuICAgICAgY29uc3QgdmlkZW8gPSB2aWRlb1JlZi5jdXJyZW50O1xuICAgICAgbGV0IG5ld1RpbWUgPSB2aWRlby5jdXJyZW50VGltZTtcbiAgICAgIFxuICAgICAgLy8gQ2xhbXAgdGltZSB3aXRoaW4gdHJpbSByYW5nZVxuICAgICAgY29uc3QgdHJpbVN0YXJ0ID0gY2xpcC50cmltU3RhcnQgfHwgMDtcbiAgICAgIGNvbnN0IHRyaW1FbmQgPSBjbGlwLnRyaW1FbmQgfHwgY2xpcC5kdXJhdGlvbiB8fCAwO1xuICAgICAgXG4gICAgICAvLyBPbmx5IGNsYW1wIGlmIHdlJ3JlIGFjdHVhbGx5IG91dHNpZGUgdGhlIHRyaW0gcmFuZ2VcbiAgICAgIGlmICh0cmltU3RhcnQgPiAwICYmIG5ld1RpbWUgPCB0cmltU3RhcnQpIHtcbiAgICAgICAgbmV3VGltZSA9IHRyaW1TdGFydDtcbiAgICAgICAgdmlkZW8uY3VycmVudFRpbWUgPSB0cmltU3RhcnQ7XG4gICAgICB9IGVsc2UgaWYgKHRyaW1FbmQgPCBjbGlwLmR1cmF0aW9uICYmIG5ld1RpbWUgPiB0cmltRW5kKSB7XG4gICAgICAgIG5ld1RpbWUgPSB0cmltRW5kO1xuICAgICAgICB2aWRlby5jdXJyZW50VGltZSA9IHRyaW1FbmQ7XG4gICAgICAgIHZpZGVvLnBhdXNlKCk7IC8vIFBhdXNlIHdoZW4gcmVhY2hpbmcgdHJpbSBlbmRcbiAgICAgICAgc2V0SXNQbGF5aW5nKGZhbHNlKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgc2V0Q3VycmVudFRpbWUobmV3VGltZSk7XG4gICAgICBvblBsYXliYWNrQ2hhbmdlPy4obmV3VGltZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZVBsYXkgPSAoKSA9PiB7XG4gICAgc2V0SXNQbGF5aW5nKHRydWUpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZVBhdXNlID0gKCkgPT4ge1xuICAgIHNldElzUGxheWluZyhmYWxzZSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlRW5kZWQgPSAoKSA9PiB7XG4gICAgc2V0SXNQbGF5aW5nKGZhbHNlKTtcbiAgICBzZXRDdXJyZW50VGltZSgwKTtcbiAgICBpZiAodmlkZW9SZWYuY3VycmVudCkge1xuICAgICAgdmlkZW9SZWYuY3VycmVudC5jdXJyZW50VGltZSA9IDA7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUVycm9yID0gKCkgPT4ge1xuICAgIHNldEhhc0Vycm9yKHRydWUpO1xuICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgc2V0SXNQbGF5aW5nKGZhbHNlKTtcbiAgfTtcblxuICAvLyBQbGF5YmFjayBjb250cm9sc1xuICBjb25zdCB0b2dnbGVQbGF5UGF1c2UgPSAoKSA9PiB7XG4gICAgaWYgKCF2aWRlb1JlZi5jdXJyZW50IHx8IGhhc0Vycm9yKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgdmlkZW8gPSB2aWRlb1JlZi5jdXJyZW50O1xuICAgIGNvbnN0IHRyaW1TdGFydCA9IGNsaXA/LnRyaW1TdGFydCB8fCAwO1xuICAgIFxuICAgIGlmIChpc1BsYXlpbmcpIHtcbiAgICAgIHZpZGVvLnBhdXNlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIEVuc3VyZSB3ZSdyZSBhdCB0cmltIHN0YXJ0IGlmIG5lZWRlZFxuICAgICAgaWYgKHRyaW1TdGFydCA+IDAgJiYgdmlkZW8uY3VycmVudFRpbWUgPCB0cmltU3RhcnQpIHtcbiAgICAgICAgdmlkZW8uY3VycmVudFRpbWUgPSB0cmltU3RhcnQ7XG4gICAgICB9XG4gICAgICB2aWRlby5wbGF5KCk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZVNjcnViID0gKGUpID0+IHtcbiAgICBpZiAoIXZpZGVvUmVmLmN1cnJlbnQgfHwgaGFzRXJyb3IgfHwgIWNsaXApIHJldHVybjtcbiAgICBcbiAgICBjb25zdCBuZXdUaW1lID0gcGFyc2VGbG9hdChlLnRhcmdldC52YWx1ZSk7XG4gICAgY29uc3QgdHJpbVN0YXJ0ID0gY2xpcC50cmltU3RhcnQgfHwgMDtcbiAgICBjb25zdCB0cmltRW5kID0gY2xpcC50cmltRW5kIHx8IGNsaXAuZHVyYXRpb24gfHwgMDtcbiAgICBcbiAgICAvLyBDbGFtcCBzY3J1YmJlciB2YWx1ZSB3aXRoaW4gdHJpbSByYW5nZVxuICAgIGNvbnN0IGNsYW1wZWRUaW1lID0gTWF0aC5tYXgodHJpbVN0YXJ0LCBNYXRoLm1pbih0cmltRW5kLCBuZXdUaW1lKSk7XG4gICAgXG4gICAgdmlkZW9SZWYuY3VycmVudC5jdXJyZW50VGltZSA9IGNsYW1wZWRUaW1lO1xuICAgIHNldEN1cnJlbnRUaW1lKGNsYW1wZWRUaW1lKTtcbiAgfTtcblxuICAvLyBLZXlib2FyZCBzaG9ydGN1dCBoYW5kbGVyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgaGFuZGxlS2V5RG93biA9IChlKSA9PiB7XG4gICAgICBpZiAoZS5jb2RlID09PSAnU3BhY2UnICYmIGNsaXAgJiYgIWhhc0Vycm9yKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdG9nZ2xlUGxheVBhdXNlKCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgaGFuZGxlS2V5RG93bik7XG4gICAgcmV0dXJuICgpID0+IHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgaGFuZGxlS2V5RG93bik7XG4gIH0sIFtjbGlwLCBoYXNFcnJvciwgaXNQbGF5aW5nXSk7XG5cbiAgLy8gTm8gY2xpcCBzZWxlY3RlZCBzdGF0ZVxuICBpZiAoIWNsaXApIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJ2aWRlby1wcmV2aWV3XCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHJldmlldy1wbGFjZWhvbGRlclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZW1wdHktaWNvblwiPlxuICAgICAgICAgICAgPFZpZGVvIHNpemU9ezgwfSBzdHJva2VXaWR0aD17MS41fSAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxoMj5ObyBjbGlwIHNlbGVjdGVkPC9oMj5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LW11dGVkXCI+U2VsZWN0IGEgY2xpcCBmcm9tIHRoZSB0aW1lbGluZSB0byBwcmV2aWV3PC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cblxuICAvLyBFcnJvciBzdGF0ZVxuICBpZiAoaGFzRXJyb3IpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJ2aWRlby1wcmV2aWV3XCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHJldmlldy1wbGFjZWhvbGRlclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZW1wdHktaWNvbiBlcnJvclwiPlxuICAgICAgICAgICAgPEFsZXJ0VHJpYW5nbGUgc2l6ZT17ODB9IHN0cm9rZVdpZHRoPXsxLjV9IC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGgyPlZpZGVvIEVycm9yPC9oMj5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LW11dGVkXCI+VW5hYmxlIHRvIGxvYWQgdmlkZW8gZmlsZTwvcD5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LW11dGVkXCI+e2NsaXAuZmlsZU5hbWV9PC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwidmlkZW8tcHJldmlld1wiPlxuICAgICAgey8qIFZpZGVvIENvbnRhaW5lciAqL31cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidmlkZW8tY29udGFpbmVyXCI+XG4gICAgICAgIDx2aWRlb1xuICAgICAgICAgIHJlZj17dmlkZW9SZWZ9XG4gICAgICAgICAgY2xhc3NOYW1lPVwidmlkZW8tZWxlbWVudFwiXG4gICAgICAgICAgb25Mb2FkZWRNZXRhZGF0YT17aGFuZGxlTG9hZGVkTWV0YWRhdGF9XG4gICAgICAgICAgb25UaW1lVXBkYXRlPXtoYW5kbGVUaW1lVXBkYXRlfVxuICAgICAgICAgIG9uUGxheT17aGFuZGxlUGxheX1cbiAgICAgICAgICBvblBhdXNlPXtoYW5kbGVQYXVzZX1cbiAgICAgICAgICBvbkVuZGVkPXtoYW5kbGVFbmRlZH1cbiAgICAgICAgICBvbkVycm9yPXtoYW5kbGVFcnJvcn1cbiAgICAgICAgICBwcmVsb2FkPVwibWV0YWRhdGFcIlxuICAgICAgICAvPlxuICAgICAgICBcbiAgICAgICAgey8qIExvYWRpbmcgb3ZlcmxheSAqL31cbiAgICAgICAge2lzTG9hZGluZyAmJiAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ2aWRlby1sb2FkaW5nXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxvYWRpbmctc3Bpbm5lclwiPjwvZGl2PlxuICAgICAgICAgICAgPHA+TG9hZGluZyB2aWRlby4uLjwvcD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuXG4gICAgICB7LyogVmlkZW8gQ29udHJvbHMgKi99XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInZpZGVvLWNvbnRyb2xzXCI+XG4gICAgICAgIHsvKiBQbGF5L1BhdXNlIEJ1dHRvbiAqL31cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIGNsYXNzTmFtZT1cImNvbnRyb2wtYnRuIHBsYXktYnRuXCJcbiAgICAgICAgICBvbkNsaWNrPXt0b2dnbGVQbGF5UGF1c2V9XG4gICAgICAgICAgZGlzYWJsZWQ9e2lzTG9hZGluZ31cbiAgICAgICAgICB0aXRsZT17aXNQbGF5aW5nID8gJ1BhdXNlIChTcGFjZSknIDogJ1BsYXkgKFNwYWNlKSd9XG4gICAgICAgID5cbiAgICAgICAgICB7aXNQbGF5aW5nID8gPFBhdXNlIHNpemU9ezE4fSAvPiA6IDxQbGF5IHNpemU9ezE4fSAvPn1cbiAgICAgICAgPC9idXR0b24+XG5cbiAgICAgICAgey8qIFRpbWUgRGlzcGxheSAqL31cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aW1lLWRpc3BsYXlcIj5cbiAgICAgICAgICA8c3Bhbj57Zm9ybWF0RHVyYXRpb24oY3VycmVudFRpbWUpfTwvc3Bhbj5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0aW1lLXNlcGFyYXRvclwiPi88L3NwYW4+XG4gICAgICAgICAgPHNwYW4+e2Zvcm1hdER1cmF0aW9uKGR1cmF0aW9uKX08L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIHsvKiBTY3J1YmJlciAqL31cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzY3J1YmJlci1jb250YWluZXJcIj5cbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIHR5cGU9XCJyYW5nZVwiXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJzY3J1YmJlclwiXG4gICAgICAgICAgICBtaW49e2NsaXA/LnRyaW1TdGFydCB8fCAwfVxuICAgICAgICAgICAgbWF4PXtjbGlwPy50cmltRW5kIHx8IGR1cmF0aW9uIHx8IDB9XG4gICAgICAgICAgICB2YWx1ZT17Y3VycmVudFRpbWV9XG4gICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlU2NydWJ9XG4gICAgICAgICAgICBzdGVwPVwiMC4xXCJcbiAgICAgICAgICAgIGRpc2FibGVkPXtpc0xvYWRpbmcgfHwgZHVyYXRpb24gPT09IDB9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgey8qIFZpZGVvIE1ldGFkYXRhICovfVxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJ2aWRlby1tZXRhZGF0YVwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1ldGFkYXRhLWl0ZW1cIj5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJtZXRhZGF0YS1sYWJlbFwiPkZpbGU6PC9zcGFuPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm1ldGFkYXRhLXZhbHVlXCIgdGl0bGU9e2NsaXAuZmlsZU5hbWV9PlxuICAgICAgICAgICAge2NsaXAuZmlsZU5hbWV9XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtZXRhZGF0YS1pdGVtXCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibWV0YWRhdGEtbGFiZWxcIj5SZXM6PC9zcGFuPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm1ldGFkYXRhLXZhbHVlXCI+XG4gICAgICAgICAgICB7Zm9ybWF0UmVzb2x1dGlvbihjbGlwLndpZHRoLCBjbGlwLmhlaWdodCl9XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtZXRhZGF0YS1pdGVtXCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibWV0YWRhdGEtbGFiZWxcIj5EdXI6PC9zcGFuPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm1ldGFkYXRhLXZhbHVlXCI+XG4gICAgICAgICAgICB7Zm9ybWF0RHVyYXRpb24oKGNsaXAudHJpbUVuZCB8fCBjbGlwLmR1cmF0aW9uKSAtIChjbGlwLnRyaW1TdGFydCB8fCAwKSl9XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlUmVmIiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwiZm9yd2FyZFJlZiIsIlBsYXkiLCJQYXVzZSIsIlZpZGVvIiwiQWxlcnRUcmlhbmdsZSIsImZvcm1hdER1cmF0aW9uIiwiZm9ybWF0UmVzb2x1dGlvbiIsIlZpZGVvUHJldmlldyIsImNsaXAiLCJvblBsYXliYWNrQ2hhbmdlIiwidmlkZW9SZWYiLCJpc1BsYXlpbmciLCJzZXRJc1BsYXlpbmciLCJjdXJyZW50VGltZSIsInNldEN1cnJlbnRUaW1lIiwiZHVyYXRpb24iLCJzZXREdXJhdGlvbiIsImlzTG9hZGluZyIsInNldElzTG9hZGluZyIsImhhc0Vycm9yIiwic2V0SGFzRXJyb3IiLCJ0cmltU3RhcnQiLCJjdXJyZW50IiwidmlkZW8iLCJyYXdQYXRoIiwiZmlsZVBhdGgiLCJyZXBsYWNlIiwidmlkZW9TcmMiLCJzcmMiLCJsb2FkIiwib25sb2FkZWRtZXRhZGF0YSIsImhhbmRsZUxvYWRlZE1ldGFkYXRhIiwib25jYW5wbGF5IiwiTWF0aCIsImFicyIsIm9uZXJyb3IiLCJlIiwibWVkaWFFcnJvciIsImVycm9yIiwiY29uc29sZSIsImNvZGUiLCJtZXNzYWdlIiwibmV0d29ya1N0YXRlIiwicmVhZHlTdGF0ZSIsIm9uc3RhbGxlZCIsIndhcm4iLCJvbnN1c3BlbmQiLCJvbndhaXRpbmciLCJoYW5kbGVUaW1lVXBkYXRlIiwibmV3VGltZSIsInRyaW1FbmQiLCJwYXVzZSIsImhhbmRsZVBsYXkiLCJoYW5kbGVQYXVzZSIsImhhbmRsZUVuZGVkIiwiaGFuZGxlRXJyb3IiLCJ0b2dnbGVQbGF5UGF1c2UiLCJwbGF5IiwiaGFuZGxlU2NydWIiLCJwYXJzZUZsb2F0IiwidGFyZ2V0IiwidmFsdWUiLCJjbGFtcGVkVGltZSIsIm1heCIsIm1pbiIsImhhbmRsZUtleURvd24iLCJwcmV2ZW50RGVmYXVsdCIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsInNpemUiLCJzdHJva2VXaWR0aCIsImZpbGVOYW1lIiwicmVmIiwib25Mb2FkZWRNZXRhZGF0YSIsIm9uVGltZVVwZGF0ZSIsIm9uUGxheSIsIm9uUGF1c2UiLCJvbkVuZGVkIiwib25FcnJvciIsInByZWxvYWQiLCJvbkNsaWNrIiwiZGlzYWJsZWQiLCJ0aXRsZSIsInR5cGUiLCJvbkNoYW5nZSIsInN0ZXAiLCJ3aWR0aCIsImhlaWdodCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/VideoPreview.jsx\n\n}");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("e2c8c5c42d86a3c5e120")
/******/ })();
/******/ 
/******/ }
);